/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.cltech.enterprisent.print_nt.forms;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;
import javax.print.DocFlavor;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.cltech.enterprisent.print_nt.App;
import net.cltech.enterprisent.print_nt.bussines.connectors.TrayConnector;
import net.cltech.enterprisent.print_nt.bussines.persistence.NTPersistence;
import net.cltech.enterprisent.print_nt.bussines.storage.Storage;
import net.cltech.enterprisent.print_nt.tools.Cache;
import net.cltech.enterprisent.print_nt.tools.Log;

/**
 *
 * @author equijano
 */
public class FrmConfiguration extends javax.swing.JFrame
{

    /**
     * Creates new form FrmDbConfiguration
     */
    public FrmConfiguration()
    {
        initComponents();
        setLocationRelativeTo(null);
        loadPrinters();
        load();
        setIconImage(new ImageIcon(getClass().getResource("/image/iconoEclipseHis.png")).getImage());
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtServer = new javax.swing.JTextField();
        btnTestUrlServer = new javax.swing.JButton();
        cmbPrinterLabel = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbPrinterReport = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtDownload = new javax.swing.JTextField();
        btnTestDirectory = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Url servidor backend:");

        btnTestUrlServer.setText("Probar url");
        btnTestUrlServer.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnTestUrlServerActionPerformed(evt);
            }
        });

        cmbPrinterLabel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbPrinterLabelActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Impresora etiquetas: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Impresora reportes: ");

        cmbPrinterReport.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbPrinterReportActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Ruta de la carpeta de descargas:");

        btnTestDirectory.setText("Probar existencia de carpeta");
        btnTestDirectory.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnTestDirectoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTestUrlServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtServer)
                    .addComponent(cmbPrinterLabel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbPrinterReport, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtDownload)
                    .addComponent(btnTestDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTestUrlServer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDownload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTestDirectory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbPrinterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbPrinterReport, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSave.setText("Guardar");
        btnSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Salir");
        btnCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
    {//GEN-HEADEREND:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveActionPerformed
    {//GEN-HEADEREND:event_btnSaveActionPerformed
        if (validateForm())
        {
            try
            {
                Storage.saveConfigurationCredentials(txtServer.getText().trim(),
                        cmbPrinterLabel.getSelectedItem().toString(),
                        cmbPrinterReport.getSelectedItem().toString(),
                        txtDownload.getText().trim()
                );
                if (Storage.checkConfigurationCredentials())
                {
                    JOptionPane.showMessageDialog(this, "Los cambios han sido almacenados, Reinicie la interfaz para aplicar cambios", App.APPLICATION_TITLE, JOptionPane.INFORMATION_MESSAGE);
                }
                this.dispose();
            } catch (IOException ex)
            {
                Log.error(ex);
                JOptionPane.showMessageDialog(this, "ERROR : " + ex.getMessage(), App.APPLICATION_TITLE, JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnTestUrlServerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnTestUrlServerActionPerformed
    {//GEN-HEADEREND:event_btnTestUrlServerActionPerformed
        if (!this.txtServer.getText().equals(""))
        {
            try
            {
                NTPersistence nt = new NTPersistence(this.txtServer.getText());
                if (nt.test())
                {
                    JOptionPane.showMessageDialog(this, "Url correcta", App.APPLICATION_TITLE, JOptionPane.INFORMATION_MESSAGE);
                } else
                {
                    JOptionPane.showMessageDialog(this, "Error en la url", App.APPLICATION_TITLE, JOptionPane.ERROR_MESSAGE);
                }
            } catch (IllegalArgumentException | IOException ex)
            {
                Log.error(ex);
                JOptionPane.showMessageDialog(this, "Error en la url ", App.APPLICATION_TITLE, JOptionPane.INFORMATION_MESSAGE);
            }
        } else
        {
            JOptionPane.showMessageDialog(this, "Ingrese la url ", App.APPLICATION_TITLE, JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnTestUrlServerActionPerformed

    private void cmbPrinterLabelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmbPrinterLabelActionPerformed
    {//GEN-HEADEREND:event_cmbPrinterLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPrinterLabelActionPerformed

    private void cmbPrinterReportActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmbPrinterReportActionPerformed
    {//GEN-HEADEREND:event_cmbPrinterReportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPrinterReportActionPerformed

    private void btnTestDirectoryActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnTestDirectoryActionPerformed
    {//GEN-HEADEREND:event_btnTestDirectoryActionPerformed
        File directionTemp = new File(txtDownload.getText());
        if (directionTemp.exists())
        {
            JOptionPane.showMessageDialog(this, "La carpeta existe", App.APPLICATION_TITLE, JOptionPane.INFORMATION_MESSAGE);
        } else
        {
            JOptionPane.showMessageDialog(this, "Error la ruta de descarga no existe", App.APPLICATION_TITLE, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTestDirectoryActionPerformed

    private boolean validateForm()
    {
        if (txtServer.getText().trim() == null || "".equals(txtServer.getText()))
        {
            JOptionPane.showMessageDialog(this, "Debe ingresar la url de un servidor de servicios", App.APPLICATION_TITLE, JOptionPane.INFORMATION_MESSAGE);
            return false;
        }

        if (cmbPrinterLabel.getSelectedItem() == null)
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una impresora de codigo de barras", App.APPLICATION_TITLE, JOptionPane.INFORMATION_MESSAGE);
            return false;
        }

        if (cmbPrinterReport.getSelectedItem() == null)
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una impresora de etiquetas", App.APPLICATION_TITLE, JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        if (txtDownload.getText().trim() == null || "".equals(txtDownload.getText()))
        {
            JOptionPane.showMessageDialog(this, "Debe ingresar la ruta de la carpeta de descargas", App.APPLICATION_TITLE, JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        return true;
    }

    private void load()
    {
        try
        {
            Properties properties = Storage.loadConfigurationCredentials();
            if (!properties.isEmpty())
            {
                txtServer.setText(properties.getProperty(Storage.SERVERBACKEND) == null ? "" : properties.getProperty(Storage.SERVERBACKEND).trim());
                txtDownload.setText(properties.getProperty(Storage.DIRECTORY) == null ? "" : properties.getProperty(Storage.DIRECTORY).trim());
                cmbPrinterLabel.setSelectedItem(properties.getProperty(Storage.PRINTERLABEL));
                cmbPrinterReport.setSelectedItem(properties.getProperty(Storage.PRINTERREPORT));
            }
        } catch (FileNotFoundException ex)
        {
        } catch (IOException ex)
        {
            Log.error(ex);
            Cache.getTrayConnector().showMessage(ex.getMessage(), TrayConnector.ERROR_MESSAGE);
        }
    }

    private void loadPrinters()
    {
        PrintService[] services = PrintServiceLookup.lookupPrintServices(DocFlavor.INPUT_STREAM.AUTOSENSE, null);
        String[] printers = new String[services.length];
        for (int i = 0; i < services.length; i++)
        {
            String[] auxPrinters = services[i].toString().split(" : ");
            printers[i] = auxPrinters[1];
        }
        cmbPrinterLabel.setModel(new DefaultComboBoxModel(printers));
        cmbPrinterReport.setModel(new DefaultComboBoxModel(printers));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTestDirectory;
    private javax.swing.JButton btnTestUrlServer;
    private javax.swing.JComboBox cmbPrinterLabel;
    private javax.swing.JComboBox cmbPrinterReport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtDownload;
    private javax.swing.JTextField txtServer;
    // End of variables declaration//GEN-END:variables

}
